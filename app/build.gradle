apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.antyzero.cardcheck"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode appVersionCode as Integer
        versionName appVersionName as String
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "long", "BUILD_DATE", "${System.currentTimeMillis()}L"
    }

    //noinspection GroovyAssignabilityCheck
    signingConfigs {

        debug {
            storeFile file('debug.keystore')
        }

        release {
            storeFile new File("" + System.getenv("KEYSTORE"))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    //noinspection GroovyAssignabilityCheck
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
        }

        release {
            if (System.getenv("KEYSTORE") != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // StringFormatInvalid - for some reason strings contain version string thats invalid
        disable 'InvalidPackage'
        abortOnError !rootProject.ext.ignoreFailures
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

kapt {
    generateStubs = true
}

play {
    jsonFile = new File("" + System.getenv("PLAY_JSON"))
    track = 'beta'
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${libVersion.android.support.appCompat}"
    }
}

dependencies {

    compile project(':domain')
    compile "com.android.support:appcompat-v7:${libVersion.android.support.appCompat}"
    compile "com.android.support:design:${libVersion.android.support.appCompat}"
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.firebase:firebase-jobdispatcher-with-gcm-dep:0.5.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    //Rx dependencies
    compile 'io.reactivex:rxandroid:1.2.1'

    //Dagger 2 dependencies
    compile "com.google.dagger:dagger:${libVersion.google.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libVersion.google.dagger}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.5.0'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}
